version: '3'

volumes:
  MONGO_VOLUMES:
  DQRANT_VOLUMES:

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: anyknowledge
      TZ: Asia/Taipei
    volumes:
      - MONGO_VOLUMES:/data/db
    ports:
      - '27017:27017'
    deploy:
      resources:
        limits:
          memory: 1G

  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - '6333:6333'
      - '6334:6334'
    volumes:
      - DQRANT_VOLUMES:/qdrant/storage
    deploy:
      resources:
        limits:
          memory: 2G

  anyknowledge:
    container_name: anyknowledge
    build:
      context: server
      dockerfile: Dockerfile
    environment:
      - VECTOR_DB_URL=qdrant
      - VECTOR_DB_PORT=6333
      - MONGODB_URL=mongodb:27017
    restart: always
    ports:
      - '8000:8000'
    depends_on:
      - mongodb
      - redis
      - qdrant
    deploy:
      resources:
        limits:
          memory: 1G

  anyknowledge-worker:
    container_name: anyknowledge-worker
    build:
      context: server
      dockerfile: Dockerfile
    environment:
      - REDIS_DB=redis:6379
    restart: always
    command: dramatiq -p 4 -t 4 worker
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 4G
